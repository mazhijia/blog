<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>VSCode常用快捷键及插件</title>
    <url>/posts/f82e/</url>
    <content><![CDATA[<h1 id="常用快捷键"><a href="#常用快捷键" class="headerlink" title="常用快捷键"></a>常用快捷键</h1><h2 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h2><ul>
<li><p>单行注释：<code>[ctrl+k,ctrl+c] 或 ctrl+/</code></p>
</li>
<li><p> 取消单行注释：<code>[ctrl+k,ctrl+u] (按下ctrl不放，再按k + u)</code></p>
</li>
<li><p>多行注释：<code>[alt+shift+A]</code></p>
</li>
<li><p> 多行注释：<code>/**</code></p>
</li>
</ul>
<span id="more"></span>

<h2 id="移动行"><a href="#移动行" class="headerlink" title="移动行"></a>移动行</h2><p><code>alt+up/down</code></p>
<h2 id="显示-隐藏左侧目录栏"><a href="#显示-隐藏左侧目录栏" class="headerlink" title="显示&#x2F;隐藏左侧目录栏"></a>显示&#x2F;隐藏左侧目录栏</h2><p><code>Ctrl+b</code></p>
<h2 id="复制当前行"><a href="#复制当前行" class="headerlink" title="复制当前行"></a>复制当前行</h2><p><code>shift + alt +up/down</code></p>
<h2 id="删除当前行"><a href="#删除当前行" class="headerlink" title="删除当前行"></a>删除当前行</h2><p><code>shift + ctrl + k</code></p>
<h2 id="控制台终端显示与隐藏"><a href="#控制台终端显示与隐藏" class="headerlink" title="控制台终端显示与隐藏"></a>控制台终端显示与隐藏</h2><p><code>Ctrl + ~</code></p>
<h2 id="查找文件-安装vs-code-插件地址"><a href="#查找文件-安装vs-code-插件地址" class="headerlink" title="查找文件&#x2F;安装vs code 插件地址"></a>查找文件&#x2F;安装vs code 插件地址</h2><p><code>Ctrl + p</code></p>
<h2 id="代码格式化"><a href="#代码格式化" class="headerlink" title="代码格式化"></a>代码格式化</h2><p><code>shift + alt + f</code></p>
<h2 id="新建窗口"><a href="#新建窗口" class="headerlink" title="新建窗口"></a>新建窗口</h2><p><code>ctrl + shift + n</code></p>
<h2 id="行增加缩进"><a href="#行增加缩进" class="headerlink" title="行增加缩进"></a>行增加缩进</h2><p><code>Ctrl + [</code></p>
<h2 id="行减少缩进"><a href="#行减少缩进" class="headerlink" title="行减少缩进"></a>行减少缩进</h2><p><code>Ctrl + ]</code></p>
<h2 id="裁剪尾随空格"><a href="#裁剪尾随空格" class="headerlink" title="裁剪尾随空格"></a>裁剪尾随空格</h2><p><code>Ctrl + shift + x</code></p>
<h2 id="字体放大-缩小"><a href="#字体放大-缩小" class="headerlink" title="字体放大(缩小)"></a>字体放大(缩小)</h2><p><code>Ctrl + (或-)</code></p>
<h2 id="拆分编辑器"><a href="#拆分编辑器" class="headerlink" title="拆分编辑器"></a>拆分编辑器</h2><p><code>Ctrl +1/2/3</code></p>
<h2 id="切换窗口"><a href="#切换窗口" class="headerlink" title="切换窗口"></a>切换窗口</h2><p><code>ctrl + shift + left/right</code></p>
<h2 id="关闭编辑器窗口"><a href="#关闭编辑器窗口" class="headerlink" title="关闭编辑器窗口"></a>关闭编辑器窗口</h2><p><code>Ctrl + w</code></p>
<h2 id="关闭所有窗口"><a href="#关闭所有窗口" class="headerlink" title="关闭所有窗口"></a>关闭所有窗口</h2><p><code>Ctrl + k + w</code></p>
<h2 id="切换全屏"><a href="#切换全屏" class="headerlink" title="切换全屏"></a>切换全屏</h2><p><code>f11</code></p>
<h2 id="自动换行"><a href="#自动换行" class="headerlink" title="自动换行"></a>自动换行</h2><p><code>alt + z</code></p>
<h2 id="显示Git"><a href="#显示Git" class="headerlink" title="显示Git"></a>显示Git</h2><p><code>Ctrl + shift + g</code></p>
<h2 id="全局查找文件"><a href="#全局查找文件" class="headerlink" title="全局查找文件"></a>全局查找文件</h2><p><code>Ctrl + shift + f</code></p>
<h2 id="显示相关插件的命令-如：git-log"><a href="#显示相关插件的命令-如：git-log" class="headerlink" title="显示相关插件的命令(如：git log)"></a>显示相关插件的命令(如：git log)</h2><p><code>Ctrl + shift + p</code></p>
<h2 id="选中文字"><a href="#选中文字" class="headerlink" title="选中文字"></a>选中文字</h2><p><code>shift + left / right / up / down</code></p>
<h2 id="折叠代码"><a href="#折叠代码" class="headerlink" title="折叠代码"></a>折叠代码</h2><p><code>ctrl + k + 0-9 (0是完全折叠)</code></p>
<h2 id="展开代码"><a href="#展开代码" class="headerlink" title="展开代码"></a>展开代码</h2><p><code>ctrl + k + j (完全展开代码)</code></p>
<h2 id="删除行"><a href="#删除行" class="headerlink" title="删除行"></a>删除行</h2><p><code>Ctrl + shift + k</code></p>
<h2 id="快速切换主题"><a href="#快速切换主题" class="headerlink" title="快速切换主题"></a>快速切换主题</h2><p><code>Ctrl + k/Ctrl + t</code></p>
<h2 id="快速回到顶部-底部"><a href="#快速回到顶部-底部" class="headerlink" title="快速回到顶部&#x2F;底部"></a>快速回到顶部&#x2F;底部</h2><p><code>Ctrl + home/end</code></p>
<h2 id="格式化选定代码"><a href="#格式化选定代码" class="headerlink" title="格式化选定代码"></a>格式化选定代码</h2><p><code>Ctrl + k/f</code></p>
<h2 id="选中代码"><a href="#选中代码" class="headerlink" title="选中代码"></a>选中代码</h2><p><code>shift + 鼠标左键</code></p>
<h2 id="多行同时添加内容（光标）"><a href="#多行同时添加内容（光标）" class="headerlink" title="多行同时添加内容（光标）"></a>多行同时添加内容（光标）</h2><p><code>ctrl + alt + up/down</code></p>
<h2 id="全局替换"><a href="#全局替换" class="headerlink" title="全局替换"></a>全局替换</h2><p><code>ctrl + shift + h</code></p>
<h2 id="当前文件替换"><a href="#当前文件替换" class="headerlink" title="当前文件替换"></a>当前文件替换</h2><p><code>Ctrl + h</code></p>
<h2 id="打开最近打开的文件"><a href="#打开最近打开的文件" class="headerlink" title="打开最近打开的文件"></a>打开最近打开的文件</h2><p><code>Ctrl + r</code></p>
<h2 id="打开新的命令窗"><a href="#打开新的命令窗" class="headerlink" title="打开新的命令窗"></a>打开新的命令窗</h2><p><code>ctrl + shift + c</code></p>
<h1 id="常用插件"><a href="#常用插件" class="headerlink" title="常用插件"></a>常用插件</h1><h3 id="1、Auto-Rename-Tag"><a href="#1、Auto-Rename-Tag" class="headerlink" title="1、Auto Rename Tag"></a>1、Auto Rename Tag</h3><p>修改html标签，自动帮你完成尾部闭合标签的同步修改，和webstorm一样。</p>
<h3 id="2、Auto-Close-Tag"><a href="#2、Auto-Close-Tag" class="headerlink" title="2、Auto Close Tag"></a>2、Auto Close Tag</h3><p>自动闭合HTML标签</p>
<h3 id="4、Beautiful"><a href="#4、Beautiful" class="headerlink" title="4、Beautiful"></a>4、Beautiful</h3><p>格式化代码的工具</p>
<h3 id="5、Dash-Dash"><a href="#5、Dash-Dash" class="headerlink" title="5、Dash Dash"></a>5、Dash Dash</h3><p>是MacOS的API文档浏览器和代码段管理器</p>
<h3 id="6、Ejs-Snippets-ejs"><a href="#6、Ejs-Snippets-ejs" class="headerlink" title="6、Ejs Snippets ejs"></a>6、Ejs Snippets ejs</h3><p>代码提示</p>
<h3 id="7、ESLint"><a href="#7、ESLint" class="headerlink" title="7、ESLint"></a>7、ESLint</h3><p>检查javascript语法错误与提示</p>
<h3 id="8、File-Navigator"><a href="#8、File-Navigator" class="headerlink" title="8、File Navigator"></a>8、File Navigator</h3><p>快速查找文件</p>
<h3 id="9、Git-History-git-log"><a href="#9、Git-History-git-log" class="headerlink" title="9、Git History(git log)"></a>9、Git History(git log)</h3><p>查看git log</p>
<h3 id="10、Gulp-Snippets"><a href="#10、Gulp-Snippets" class="headerlink" title="10、Gulp Snippets"></a>10、Gulp Snippets</h3><p>写gulp时用到，gulp语法提示。</p>
<h3 id="11、HTML-CSS-Support"><a href="#11、HTML-CSS-Support" class="headerlink" title="11、HTML CSS Support"></a>11、HTML CSS Support</h3><p>在HTML标签上写class智能提示当前项目所支持的样式</p>
<h3 id="12、HTML-Snippets"><a href="#12、HTML-Snippets" class="headerlink" title="12、HTML Snippets"></a>12、HTML Snippets</h3><p>超级好用且初级的H5代码片段以及提示</p>
<h3 id="13、Debug-for-Chrome"><a href="#13、Debug-for-Chrome" class="headerlink" title="13、Debug for Chrome"></a>13、Debug for Chrome</h3><p>让vs code映射chrome的debug功能，静态页面都可以用vscode来打断点调试、配饰稍微复杂一点</p>
<h3 id="14、Document-this"><a href="#14、Document-this" class="headerlink" title="14、Document this"></a>14、Document this</h3><p>Js的注释模板</p>
<h3 id="15、jQuery-Code-Snippets"><a href="#15、jQuery-Code-Snippets" class="headerlink" title="15、jQuery Code Snippets"></a>15、jQuery Code Snippets</h3><p>jquery提示工具</p>
<h3 id="16、Html2jade"><a href="#16、Html2jade" class="headerlink" title="16、Html2jade"></a>16、Html2jade</h3><p>html模板转pug模板</p>
<h3 id="17、JS-CSS-HTML"><a href="#17、JS-CSS-HTML" class="headerlink" title="17、JS-CSS-HTML"></a>17、JS-CSS-HTML</h3><p>Formatter 格式化</p>
<h3 id="18、Npm-intellisense"><a href="#18、Npm-intellisense" class="headerlink" title="18、Npm intellisense"></a>18、Npm intellisense</h3><p>require 时的包提示工具</p>
<h3 id="19、Open-in-browser"><a href="#19、Open-in-browser" class="headerlink" title="19、Open in browser"></a>19、Open in browser</h3><p>打开默认浏览器</p>
<h3 id="20、One-Dark-Theme"><a href="#20、One-Dark-Theme" class="headerlink" title="20、One Dark Theme"></a>20、One Dark Theme</h3><p>一个vs code的主题</p>
<h3 id="21、Path-Intellisense"><a href="#21、Path-Intellisense" class="headerlink" title="21、Path Intellisense"></a>21、Path Intellisense</h3><p>自动路径补全、默认不带这个功能</p>
<h3 id="22、Project-Manager"><a href="#22、Project-Manager" class="headerlink" title="22、Project Manager"></a>22、Project Manager</h3><p>多个项目之间快速切换的工具</p>
<h3 id="23、Typings-auto-installer"><a href="#23、Typings-auto-installer" class="headerlink" title="23、Typings auto installer"></a>23、Typings auto installer</h3><p>安装vscode 的代码提示依赖库，基于typtings的</p>
<h3 id="24、View-In-Browser"><a href="#24、View-In-Browser" class="headerlink" title="24、View In Browser"></a>24、View In Browser</h3><p>默认浏览器查看HTML文件（快捷键Ctrl+F1可以修改）</p>
<h3 id="25、Vscode-icons"><a href="#25、Vscode-icons" class="headerlink" title="25、Vscode-icons"></a>25、Vscode-icons</h3><p>让vscode资源目录加上图标、必备</p>
<h3 id="26、VueHelper"><a href="#26、VueHelper" class="headerlink" title="26、VueHelper"></a>26、VueHelper</h3><p>Vue2代码段（包括Vue2 api、vue-router2、vuex2）</p>
<h3 id="27、Vue-2-Snippets"><a href="#27、Vue-2-Snippets" class="headerlink" title="27、Vue 2 Snippets"></a>27、Vue 2 Snippets</h3><p>vue必备vue代码提示</p>
<h3 id="28、Vue-color"><a href="#28、Vue-color" class="headerlink" title="28、Vue-color"></a>28、Vue-color</h3><p>vue语法高亮主题</p>
<h3 id="29、Auto-Open-Markdown-Preview"><a href="#29、Auto-Open-Markdown-Preview" class="headerlink" title="29、Auto-Open Markdown Preview"></a>29、Auto-Open Markdown Preview</h3><p>markdown文件自动开启预览</p>
]]></content>
      <categories>
        <category>blog</category>
      </categories>
      <tags>
        <tag>#vscode</tag>
        <tag>#快捷键</tag>
      </tags>
  </entry>
  <entry>
    <title>欢迎来到我的博客</title>
    <url>/posts/undefined/</url>
    <content><![CDATA[<h1 id="欢迎来到我的博客"><a href="#欢迎来到我的博客" class="headerlink" title="欢迎来到我的博客"></a>欢迎来到我的博客</h1><p>欢迎来到我的个人博客！这里是我分享技术见解和生活点滴的地方。</p>
<h2 id="关于我"><a href="#关于我" class="headerlink" title="关于我"></a>关于我</h2><span id="more"></span>

<p>我是一名机器人工程专业的学生，热爱编程、诗词和游戏。这个博客是我的小天地，我在这里记录我的学习历程和生活经历。</p>
<h2 id="联系方式"><a href="#联系方式" class="headerlink" title="联系方式"></a>联系方式</h2><ul>
<li>邮箱：<a href="mailto:admin@yu-chu.tech">admin@yu-chu.tech</a></li>
<li>GitHub：<a href="https://github.com/mazhijia">github.com&#x2F;mazhijia</a></li>
</ul>
<p>感谢您的访问，希望您喜欢我的博客！</p>
]]></content>
  </entry>
  <entry>
    <title>winget的基础配置与使用</title>
    <url>/posts/8eff/</url>
    <content><![CDATA[<h1 id="1-什么是winget"><a href="#1-什么是winget" class="headerlink" title="1.什么是winget"></a>1.什么是winget</h1><p>微软公司在 2020 年 5 月 Microsoft Build 开发者大会上发布了用于 Windows 系统的官方支持的软件包管理器 —— Windows 软件包管理器（Windows Package Manager），也就是 WinGet 软件包管理器。经过 3 年的发展，越来越多的软件厂商在这个平台上发布自家软件。WinGet 除了支持 exe、msi 等传统的 Win32 安装包格式外，还支持用于新版 Windows 的 msix&#x2F;msixbundle 格式所打包的软件。</p>
<p><a href="https://learn.microsoft.com/en-us/windows/package-manager">Windows软件包管理工具</a></p>
<span id="more"></span>

<h1 id="2-获取winget"><a href="#2-获取winget" class="headerlink" title="2.获取winget"></a>2.获取winget</h1><p>首先确认系统是否满足需求：WinGet 只可以运行在 Windows10 高于 1709 (Build 16299) 的版本和 Windows11 上。</p>
<p>在安装 WinGet 之前，建议使用微软新推出的终端模拟器 Windows Terminal 代替传统的conhost.exe。</p>
<h2 id="2-1-Windows10-11-非-LTS-版本（家庭版、教育版、专业版、专业工作站版、企业版）"><a href="#2-1-Windows10-11-非-LTS-版本（家庭版、教育版、专业版、专业工作站版、企业版）" class="headerlink" title="2.1 Windows10&#x2F;11 非 LTS 版本（家庭版、教育版、专业版、专业工作站版、企业版）"></a>2.1 Windows10&#x2F;11 非 LTS 版本（家庭版、教育版、专业版、专业工作站版、企业版）</h2><p>Windows Terminal 和 WinGet 都可以通过系统预装的 Microsoft Store 商店搜索安装，也可以转到下面的网页调用 Microsoft Store 安装，也可以去微软托管在 GitHub 的发布页下载安装包到本地安装（较新版本的 Windows11 已经预装，如已预装请略过此章节）</p>
<h3 id="Windows-Terminal"><a href="#Windows-Terminal" class="headerlink" title="Windows Terminal"></a>Windows Terminal</h3><p><a href="https://apps.microsoft.com/detail/9n0dx20hk701?hl=zh=CN&gl=CN">Windows Terminal</a></p>
<h3 id="Winget"><a href="#Winget" class="headerlink" title="Winget"></a>Winget</h3><p><a href="https://apps.microsoft.com/detail/9nblggh4nns1?hl=zh-CN&gl=CN">Winget</a></p>
<h2 id="2-2-设置-Windows-Terminal-为系统默认终端模拟器"><a href="#2-2-设置-Windows-Terminal-为系统默认终端模拟器" class="headerlink" title="2.2 设置 Windows Terminal 为系统默认终端模拟器"></a>2.2 设置 Windows Terminal 为系统默认终端模拟器</h2><p>较新版本的 Windows11 已经默认 Windows Terminal 为系统终端模拟器，如已配置好请略过此章节。</p>
<p>从命令行窗口标题栏右键菜单进入默认设置,在【终端】选项卡下更改“默认终端应用程序”为“Windows 终端”，确认退出.</p>
<h2 id="3-使用-WinGet-管理软件"><a href="#3-使用-WinGet-管理软件" class="headerlink" title="3. 使用 WinGet 管理软件"></a>3. 使用 WinGet 管理软件</h2><h3 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h3><ul>
<li><p>查看版本、信息</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">winget -v(winget --version)   #显示winget版本</span><br><span class="line">winget info                   #显示常规信息</span><br></pre></td></tr></table></figure>
</li>
<li><p>替换源：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">winget source remove winget</span><br><span class="line">winget source add winget https://mirrors.ustc.edu.cn/winget-source</span><br></pre></td></tr></table></figure></li>
<li><p>搜索软件包<br><code>winget search [包名]</code><br>以7zip为例<br><img src="https://cloud.yuchu.me/f/rRi2/winget_search.png" alt="winget_search"></p>
</li>
<li><p>查看软件包<br><code>winget show --id 7zip.7zip</code><br><img src="https://cloud.yuchu.me/f/vlsA/winget_show.png" alt="winget_show"></p>
</li>
<li><p>安装软件包<br><code>winget install --id 7zip.7zip</code></p>
</li>
<li><p>自定义安装<br><code>winget install --id 7zip.7zip -i</code></p>
</li>
</ul>
<p>-指定位置安装<br><code>winget install -l,--location [指定路径(如支持)]</code></p>
<ul>
<li><p>更新软件包<br><code>winget upgrade --id 7zip.7zip</code></p>
</li>
<li><p>卸载软件包<br><code>winget uninstall --id 7zip.7zip</code></p>
</li>
<li><p>显示已安装的软件包<br><code>winget list</code></p>
</li>
</ul>
<h3 id="其他命令"><a href="#其他命令" class="headerlink" title="其他命令"></a>其他命令</h3><ul>
<li><p><code>winget search --id [包名]                                    #按id筛选结果</code></p>
</li>
<li><p><code>winget search --name [包名]                                  #按名称筛选</code></p>
</li>
<li><p><code>winget search --tag [包名]                                   #按标签筛选</code></p>
</li>
<li><p><code>winget search -s,--source [包名]                             #指定源查找</code></p>
</li>
<li><p><code>winget search -e,--exact [包名]                              #精确匹配查找</code></p>
</li>
<li><p><code>winget search --version [包名]                               #显示软件包可用版本</code></p>
</li>
<li><p><code>winget install --id/--name/--tag/-e,--exact/--version [包名] #与search类似</code></p>
</li>
<li><p><code>winget install --ignore-security-hash [包名]                 #忽略安装程序哈希检查失败</code></p>
</li>
</ul>
<h1 id="进阶—使用PowerShell-脚本从网络批量下载来自-WinGet-的软件包"><a href="#进阶—使用PowerShell-脚本从网络批量下载来自-WinGet-的软件包" class="headerlink" title="进阶—使用PowerShell 脚本从网络批量下载来自 WinGet 的软件包"></a>进阶—使用PowerShell 脚本从网络批量下载来自 WinGet 的软件包</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># Requires -Version 7.0</span><br><span class="line"></span><br><span class="line">#更改字符集为UTF-8</span><br><span class="line">#[System.Console]::OutputEncoding=[System.Text.Encoding]::GetEncoding(65001)</span><br><span class="line"></span><br><span class="line"># 更新源</span><br><span class="line"># winget source reset winget</span><br><span class="line"># winget source add winget https://mirrors.ustc.edu.cn/winget-source/</span><br><span class="line"></span><br><span class="line">Clear-Host</span><br><span class="line"></span><br><span class="line"># 写入安装脚本</span><br><span class="line">$Script:PackageCount = 0</span><br><span class="line">$Script:PackageLocalPath = &quot;PackageInstallers&quot;</span><br><span class="line">$Script:PackageList = &quot;PackageInstallers.log&quot;</span><br><span class="line">$Script:PackageScriptIWR = &quot;Get-PackageInstallersIWR.ps1&quot;</span><br><span class="line">$Script:PackageScriptSBT = &quot;Get-PackageInstallersSBT.ps1&quot;</span><br><span class="line">$Script:PackageScriptWCD = &quot;Get-PackageInstallersWCD.ps1&quot;</span><br><span class="line">$Script:PackageLogIWR = [System.String]::Concat($Script:PackageLocalPath, &quot;\PackageInstallersIWR.log&quot;)</span><br><span class="line">$Script:PackageLogSBT = [System.String]::Concat($Script:PackageLocalPath, &quot;\PackageInstallersSBT.log&quot;)</span><br><span class="line">$Script:PackageLogWCD = [System.String]::Concat($Script:PackageLocalPath, &quot;\PackageInstallersWCD.log&quot;)</span><br><span class="line"></span><br><span class="line">New-Item -Name $Script:PackageLocalPath -ItemType Directory -Force | Out-Null</span><br><span class="line">Remove-Item $Script:PackageLocalPath\* -Recurse -Force | Out-Null</span><br><span class="line"></span><br><span class="line">Write-Output $null | Out-File $Script:PackageList</span><br><span class="line">Write-Output $null | Out-File $Script:PackageScriptIWR</span><br><span class="line">Write-Output $null | Out-File $Script:PackageScriptSBT</span><br><span class="line">Write-Output $null | Out-File $Script:PackageScriptWCD</span><br><span class="line"></span><br><span class="line">[System.String]::Concat(&quot;# Updated @ &quot;, (Get-Date -Format &quot;yyyy.MM.dd-HH:mm:ss&quot;)) | Tee-Object $Script:PackageScriptIWR -Append | Tee-Object $Script:PackageScriptSBT -Append | Out-File $Script:PackageScriptWCD -Append</span><br><span class="line">Write-Output &quot;# Requires -Version 7.0&quot; | Tee-Object $Script:PackageScriptIWR -Append | Tee-Object $Script:PackageScriptSBT -Append | Out-File $Script:PackageScriptWCD -Append</span><br><span class="line">Write-Output &quot;`$Script:PackageLocalCount = 0&quot; | Tee-Object $Script:PackageScriptIWR -Append | Tee-Object $Script:PackageScriptSBT -Append | Out-File $Script:PackageScriptWCD -Append</span><br><span class="line">Write-Output &quot;Clear-Host&quot; | Tee-Object $Script:PackageScriptIWR -Append | Tee-Object $Script:PackageScriptSBT -Append | Out-File $Script:PackageScriptWCD -Append</span><br><span class="line">Write-Output &quot;New-Item -Name `&quot;$Script:PackageLocalPath`&quot; -ItemType Directory -Force | Out-Null&quot; | Tee-Object $Script:PackageScriptIWR -Append | Tee-Object $Script:PackageScriptSBT -Append | Out-File $Script:PackageScriptWCD -Append</span><br><span class="line">Write-Output &quot;Remove-Item `&quot;$Script:PackageLocalPath\*`&quot; -Recurse -Force | Out-Null&quot; | Tee-Object $Script:PackageScriptIWR -Append | Tee-Object $Script:PackageScriptSBT -Append | Out-File $Script:PackageScriptWCD -Append</span><br><span class="line">Write-Output &quot;Write-Output `$null | Out-File `&quot;$Script:PackageLogIWR`&quot;&quot; | Out-File $Script:PackageScriptIWR -Append</span><br><span class="line">Write-Output &quot;Write-Output `$null | Out-File `&quot;$Script:PackageLogSBT`&quot;&quot; | Out-File $Script:PackageScriptSBT -Append</span><br><span class="line">Write-Output &quot;Write-Output `$null | Out-File `&quot;$Script:PackageLogWCD`&quot;&quot; | Out-File $Script:PackageScriptWCD -Append</span><br><span class="line"></span><br><span class="line"># 安装脚本函数</span><br><span class="line">function Get-WinGetPackageURL &#123;</span><br><span class="line">    param($ID, $Name, $Type, $Class)</span><br><span class="line"></span><br><span class="line">    $Private:PackageWinGetID = $ID</span><br><span class="line">    $Private:PackageFilename = $Name</span><br><span class="line">    $Private:PackageFiletype = $Type</span><br><span class="line">    $Private:PackageClassification = $Class</span><br><span class="line">    $Private:PackageLocalClassifiedPath = [System.String]::Concat($Script:PackageLocalPath, &quot;\&quot;, $Private:PackageClassification)</span><br><span class="line"></span><br><span class="line">    $Private:FindURL = &quot;安装程序 URL：&quot;</span><br><span class="line">    $Private:FindVER = &quot;版本:&quot;</span><br><span class="line"></span><br><span class="line">    # 获取软件包版本和下载地址</span><br><span class="line">    try &#123;</span><br><span class="line">        # System Installer</span><br><span class="line">        $Private:PackageURL = [System.String]::Concat((winget show --scope machine -id $Private:PackageWinGetID | Select-String $Private:FindURL)).Replace($Private:FindURL, &quot;&quot;).Replace(&quot; &quot;, &quot;&quot;)</span><br><span class="line">        $Private:PackageVersion = [System.String]::Concat((winget show --scope machine -id $Private:PackageWinGetID | Select-String $Private:FindVER)).Replace($Private:FindVER, &quot;&quot;).Replace(&quot; &quot;, &quot;&quot;)</span><br><span class="line">    &#125;</span><br><span class="line">    catch [ArgumentNullException] &#123;</span><br><span class="line">        # User Installer</span><br><span class="line">        $Private:PackageURL = [System.String]::Concat((winget show --id $Private:PackageWinGetID | Select-String $Private:FindURL)).Replace($Private:FindURL, &quot;&quot;).Replace(&quot; &quot;, &quot;&quot;)</span><br><span class="line">        $Private:PackageVersion = [System.String]::Concat((winget show --id $Private:PackageWinGetID | Select-String $Private:FindVER)).Replace($Private:FindVER, &quot;&quot;).Replace(&quot; &quot;, &quot;&quot;)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    $Script:PackageCount++</span><br><span class="line">    $Private:PackageLocalFile = [System.String]::Concat($Private:PackageLocalClassifiedPath, &quot;\&quot;, $Private:PackageFilename, &quot;_&quot;, $Private:PackageVersion, &quot;.&quot;, $Private:PackageFiletype)</span><br><span class="line">    $Private:PackageUpdateTime = Get-Date -Format &quot;yyyy.MM.dd-HH:mm:ss&quot;</span><br><span class="line"></span><br><span class="line">    $Private:PackageCommandPath = &quot;New-Item -Name `&quot;$Private:PackageLocalClassifiedPath`&quot; -ItemType Directory -Force | Out-Null&quot;</span><br><span class="line">    $Private:PackageCommandItem = &quot;New-Item -Name `&quot;$Private:PackageLocalFile`&quot; -ItemType File -Force | Out-Null&quot;</span><br><span class="line">    $Private:PackageCommandDNS = &quot;ipconfig.exe /flushdns | Out-Null&quot;</span><br><span class="line">    $Private:PackageCommandIWR = &quot;Invoke-WebRequest -Uri `&quot;$Private:PackageURL`&quot; -OutFile `&quot;$Private:PackageLocalFile`&quot;&quot;</span><br><span class="line">    $Private:PackageCommandSBT = &quot;Start-BitsTransfer -Source `&quot;$Private:PackageURL`&quot; -Destination `&quot;$Private:PackageLocalFile`&quot;&quot;</span><br><span class="line">    $Private:PackageCommandWCD = &quot;`$PackageWebClient = New-Object System.Net.WebClient; `$PackageWebClient.DownloadFile(`&quot;$Private:PackageURL`&quot;, `&quot;$Private:PackageLocalFile`&quot;)&quot;</span><br><span class="line">    $Private:PackageCommandLog = &quot;Start-Sleep -Seconds 3; [System.Console]::Out.Flush(); [System.String]::Concat(`&quot;┏━ `&quot;, (Get-Date -Format `&quot;yyyy.MM.dd-HH:mm:ss`&quot;), `&quot; @ $Private:PackageWinGetID`&quot;, `&quot; [$Private:PackageVersion]``n`&quot;, `&quot;┣━ ```&quot;$Private:PackageURL```&quot;``n`&quot;, `&quot;┗━ ```&quot;$Private:PackageLocalFile```&quot;``n`&quot;) | Write-Output&quot;</span><br><span class="line"></span><br><span class="line">    Write-Output &quot;┏━ $Private:PackageUpdateTime @ $Private:PackageWinGetID [$Private:PackageVersion]`n┣━ `&quot;$Private:PackageURL`&quot;`n┗━ `&quot;$Private:PackageLocalFile`&quot;`n&quot; | Tee-Object $Script:PackageList -Append</span><br><span class="line">    Write-Output &quot;$Private:PackageCommandPath; $Private:PackageCommandItem; $Private:PackageCommandDNS; $Private:PackageCommandIWR; if (`$?) &#123; `$Script:PackageLocalCount++; $Private:PackageCommandLog | Tee-Object `&quot;$Script:PackageLogIWR`&quot; -Append; &#125;&quot; | Out-File $Script:PackageScriptIWR -Append</span><br><span class="line">    Write-Output &quot;$Private:PackageCommandPath; $Private:PackageCommandItem; $Private:PackageCommandDNS; $Private:PackageCommandSBT; if (`$?) &#123; `$Script:PackageLocalCount++; $Private:PackageCommandLog | Tee-Object `&quot;$Script:PackageLogSBT`&quot; -Append; &#125;&quot; | Out-File $Script:PackageScriptSBT -Append</span><br><span class="line">    Write-Output &quot;$Private:PackageCommandPath; $Private:PackageCommandItem; $Private:PackageCommandDNS; $Private:PackageCommandWCD; if (`$?) &#123; `$Script:PackageLocalCount++; $Private:PackageCommandLog | Tee-Object `&quot;$Script:PackageLogWCD`&quot; -Append; &#125;&quot; | Out-File $Script:PackageScriptWCD -Append</span><br><span class="line"></span><br><span class="line">    New-Item -Name $Private:PackageLocalClassifiedPath -ItemType Directory -Force | Out-Null</span><br><span class="line">    New-Item -Name $Private:PackageLocalFile -ItemType File -Force | Out-Null</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">ipconfig /flushdns | Out-Null</span><br><span class="line"></span><br><span class="line"># Components</span><br><span class="line">Get-WinGetPackageURL -ID &quot;Microsoft.VCRedist.2005.x86&quot; -Name &quot;Microsoft_Visual_C++_Redistributable_2005_32bit&quot; -Type &quot;exe&quot; -Class &quot;Components&quot;</span><br><span class="line">Get-WinGetPackageURL -ID &quot;Microsoft.VCRedist.2005.x64&quot; -Name &quot;Microsoft_Visual_C++_Redistributable_2005_64bit&quot; -Type &quot;exe&quot; -Class &quot;Components&quot;</span><br><span class="line">Get-WinGetPackageURL -ID &quot;Microsoft.VCRedist.2008.x86&quot; -Name &quot;Microsoft_Visual_C++_Redistributable_2008_32bit&quot; -Type &quot;exe&quot; -Class &quot;Components&quot;</span><br><span class="line">Get-WinGetPackageURL -ID &quot;Microsoft.VCRedist.2008.x64&quot; -Name &quot;Microsoft_Visual_C++_Redistributable_2008_64bit&quot; -Type &quot;exe&quot; -Class &quot;Components&quot;</span><br><span class="line">Get-WinGetPackageURL -ID &quot;Microsoft.VCRedist.2010.x86&quot; -Name &quot;Microsoft_Visual_C++_Redistributable_2010_32bit&quot; -Type &quot;exe&quot; -Class &quot;Components&quot;</span><br><span class="line">Get-WinGetPackageURL -ID &quot;Microsoft.VCRedist.2010.x64&quot; -Name &quot;Microsoft_Visual_C++_Redistributable_2010_64bit&quot; -Type &quot;exe&quot; -Class &quot;Components&quot;</span><br><span class="line">Get-WinGetPackageURL -ID &quot;Microsoft.VCRedist.2012.x86&quot; -Name &quot;Microsoft_Visual_C++_Redistributable_2012_32bit&quot; -Type &quot;exe&quot; -Class &quot;Components&quot;</span><br><span class="line">Get-WinGetPackageURL -ID &quot;Microsoft.VCRedist.2012.x64&quot; -Name &quot;Microsoft_Visual_C++_Redistributable_2012_64bit&quot; -Type &quot;exe&quot; -Class &quot;Components&quot;</span><br><span class="line">Get-WinGetPackageURL -ID &quot;Microsoft.VCRedist.2013.x86&quot; -Name &quot;Microsoft_Visual_C++_Redistributable_2013_32bit&quot; -Type &quot;exe&quot; -Class &quot;Components&quot;</span><br><span class="line">Get-WinGetPackageURL -ID &quot;Microsoft.VCRedist.2013.x64&quot; -Name &quot;Microsoft_Visual_C++_Redistributable_2013_64bit&quot; -Type &quot;exe&quot; -Class &quot;Components&quot;</span><br><span class="line">Get-WinGetPackageURL -ID &quot;Microsoft.VCRedist.2015+.x86&quot; -Name &quot;Microsoft_Visual_C++_Redistributable_2015_32bit&quot; -Type &quot;exe&quot; -Class &quot;Components&quot;</span><br><span class="line">Get-WinGetPackageURL -ID &quot;Microsoft.VCRedist.2015+.x64&quot; -Name &quot;Microsoft_Visual_C++_Redistributable_2015_64bit&quot; -Type &quot;exe&quot; -Class &quot;Components&quot;</span><br><span class="line">Get-WinGetPackageURL -ID &quot;Microsoft.PowerToys&quot; -Name &quot;Microsoft_PowerToys&quot; -Type &quot;exe&quot; -Class &quot;Applications&quot;</span><br><span class="line">Get-WinGetPackageURL -ID &quot;EclipseAdoptium.Temurin.8.JDK&quot; -Name &quot;EclipseAdoptium_Temurin_JDK_8_Releases&quot; -Type &quot;msi&quot; -Class &quot;Components&quot;</span><br><span class="line">Get-WinGetPackageURL -ID &quot;EclipseAdoptium.Temurin.11.JDK&quot; -Name &quot;EclipseAdoptium_Temurin_JDK_11_Releases&quot; -Type &quot;msi&quot; -Class &quot;Components&quot;</span><br><span class="line">Get-WinGetPackageURL -ID &quot;EclipseAdoptium.Temurin.17.JDK&quot; -Name &quot;EclipseAdoptium_Temurin_JDK_17_Releases&quot; -Type &quot;msi&quot; -Class &quot;Components&quot;</span><br><span class="line">Get-WinGetPackageURL -ID &quot;Python.Python.2&quot; -Name &quot;Python_2_Dev&quot; -Type &quot;msi&quot; -Class &quot;Components&quot;</span><br><span class="line">Get-WinGetPackageURL -ID &quot;Python.Python.3.8&quot; -Name &quot;Python_3.8_Dev&quot; -Type &quot;exe&quot; -Class &quot;Components&quot;</span><br><span class="line">Get-WinGetPackageURL -ID &quot;Python.Python.3.11&quot; -Name &quot;Python_3.11_Dev&quot; -Type &quot;exe&quot; -Class &quot;Components&quot;</span><br><span class="line"></span><br><span class="line"># Applications</span><br><span class="line">Get-WinGetPackageURL -ID &quot;7zip.7zip&quot; -Name &quot;7_Zip&quot; -Type &quot;exe&quot; -Class &quot;Applications&quot;</span><br><span class="line">Get-WinGetPackageURL -ID &quot;Anaconda.Anaconda3&quot; -Name &quot;Anaconda3&quot; -Type &quot;exe&quot; -Class &quot;Applications&quot;</span><br><span class="line">Get-WinGetPackageURL -ID &quot;Apple.iTunes&quot; -Name &quot;iTunes&quot; -Type &quot;exe&quot; -Class &quot;Applications&quot;</span><br><span class="line">Get-WinGetPackageURL -ID &quot;Audacity.Audacity&quot; -Name &quot;Audacity&quot; -Type &quot;exe&quot; -Class &quot;Applications&quot;</span><br><span class="line">Get-WinGetPackageURL -ID &quot;Bandisoft.Bandizip&quot; -Name &quot;Bandizip&quot; -Type &quot;exe&quot; -Class &quot;Applications&quot;</span><br><span class="line">Get-WinGetPackageURL -ID &quot;Bandisoft.Honeyview&quot; -Name &quot;Honeyview&quot; -Type &quot;exe&quot; -Class &quot;Applications&quot;</span><br><span class="line">Get-WinGetPackageURL -ID &quot;Bitvise.SSH.Server&quot; -Name &quot;Bitvise_SSH_Server&quot; -Type &quot;exe&quot; -Class &quot;Applications&quot;</span><br><span class="line">Get-WinGetPackageURL -ID &quot;BlenderFoundation.Blender&quot; -Name &quot;Blender&quot; -Type &quot;msi&quot; -Class &quot;Applications&quot;</span><br><span class="line">Get-WinGetPackageURL -ID &quot;Codeblocks.Codeblocks&quot; -Name &quot;Codeblocks&quot; -Type &quot;exe&quot; -Class &quot;Applications&quot;</span><br><span class="line">Get-WinGetPackageURL -ID &quot;darktable.darktable&quot; -Name &quot;darktable&quot; -Type &quot;exe&quot; -Class &quot;Applications&quot;</span><br><span class="line">Get-WinGetPackageURL -ID &quot;den4b.Hasher&quot; -Name &quot;Hasher&quot; -Type &quot;exe&quot; -Class &quot;Applications&quot;</span><br><span class="line">Get-WinGetPackageURL -ID &quot;den4b.ReNamer&quot; -Name &quot;ReNamer&quot; -Type &quot;exe&quot; -Class &quot;Applications&quot;</span><br><span class="line">Get-WinGetPackageURL -ID &quot;DEVCOM.JetBrainsMonoNerdFont&quot; -Name &quot;Nerd_Fonts&quot; -Type &quot;msi&quot; -Class &quot;Applications&quot;</span><br><span class="line">Get-WinGetPackageURL -ID &quot;Geany.Geany&quot; -Name &quot;Geany&quot; -Type &quot;exe&quot; -Class &quot;Applications&quot;</span><br><span class="line">Get-WinGetPackageURL -ID &quot;GeekUninstaller.GeekUninstaller&quot; -Name &quot;Geek_Uninstaller&quot; -Type &quot;zip&quot; -Class &quot;Applications&quot;</span><br><span class="line">Get-WinGetPackageURL -ID &quot;GIMP.GIMP&quot; -Name &quot;GIMP&quot; -Type &quot;exe&quot; -Class &quot;Applications&quot;</span><br><span class="line">Get-WinGetPackageURL -ID &quot;Git.Git&quot; -Name &quot;Git&quot; -Type &quot;exe&quot; -Class &quot;Applications&quot;</span><br><span class="line">Get-WinGetPackageURL -ID &quot;GitHub.Atom&quot; -Name &quot;Atom&quot; -Type &quot;exe&quot; -Class &quot;Applications&quot;</span><br><span class="line">Get-WinGetPackageURL -ID &quot;GitHub.GitHubDesktop&quot; -Name &quot;GitHubDesktop&quot; -Type &quot;msi&quot; -Class &quot;Applications&quot;</span><br><span class="line">Get-WinGetPackageURL -ID &quot;GNU.Octave&quot; -Name &quot;Octave&quot; -Type &quot;exe&quot; -Class &quot;Applications&quot;</span><br><span class="line">Get-WinGetPackageURL -ID &quot;gnuplot.gnuplot&quot; -Name &quot;gnuplot&quot; -Type &quot;exe&quot; -Class &quot;Applications&quot;</span><br><span class="line">Get-WinGetPackageURL -ID &quot;Google.Chrome&quot; -Name &quot;Google_Chrome&quot; -Type &quot;msi&quot; -Class &quot;Applications&quot;</span><br><span class="line">Get-WinGetPackageURL -ID &quot;HandBrake.HandBrake&quot; -Name &quot;HandBrake&quot; -Type &quot;exe&quot; -Class &quot;Applications&quot;</span><br><span class="line">Get-WinGetPackageURL -ID &quot;Harmonoid.Harmonoid&quot; -Name &quot;Harmonoid&quot; -Type &quot;exe&quot; -Class &quot;Applications&quot;</span><br><span class="line">Get-WinGetPackageURL -ID &quot;Henry++.MemReduct&quot; -Name &quot;MemReduct&quot; -Type &quot;exe&quot; -Class &quot;Applications&quot;</span><br><span class="line">Get-WinGetPackageURL -ID &quot;JanDeDobbeleer.OhMyPosh&quot; -Name &quot;Oh_My_Posh&quot; -Type &quot;exe&quot; -Class &quot;Applications&quot;</span><br><span class="line">Get-WinGetPackageURL -ID &quot;KDE.Kate&quot; -Name &quot;Kate&quot; -Type &quot;exe&quot; -Class &quot;Applications&quot;</span><br><span class="line">Get-WinGetPackageURL -ID &quot;KDE.Krita&quot; -Name &quot;Krita&quot; -Type &quot;exe&quot; -Class &quot;Applications&quot;</span><br><span class="line">Get-WinGetPackageURL -ID &quot;KDE.Okular&quot; -Name &quot;Okular&quot; -Type &quot;exe&quot; -Class &quot;Applications&quot;</span><br><span class="line">Get-WinGetPackageURL -ID &quot;Kitware.CMake&quot; -Name &quot;CMake&quot; -Type &quot;msi&quot; -Class &quot;Applications&quot;</span><br><span class="line">Get-WinGetPackageURL -ID &quot;LLVM.LLVM&quot; -Name &quot;LLVM&quot; -Type &quot;exe&quot; -Class &quot;Applications&quot;</span><br><span class="line">Get-WinGetPackageURL -ID &quot;Meltytech.Shotcut&quot; -Name &quot;Shotcut&quot; -Type &quot;exe&quot; -Class &quot;Applications&quot;</span><br><span class="line">Get-WinGetPackageURL -ID &quot;MHNexus.HxD&quot; -Name &quot;HxD&quot; -Type &quot;zip&quot; -Class &quot;Applications&quot;</span><br><span class="line">Get-WinGetPackageURL -ID &quot;Microsoft.VisualStudio.2022.Community&quot; -Name &quot;Microsoft_Visual_Studio_2022_Community&quot; -Type &quot;exe&quot; -Class &quot;Applications&quot;</span><br><span class="line">Get-WinGetPackageURL -ID &quot;Microsoft.VisualStudioCode&quot; -Name &quot;Microsoft_Visual_Studio_Code&quot; -Type &quot;exe&quot; -Class &quot;Applications&quot;</span><br><span class="line">Get-WinGetPackageURL -ID &quot;Mozilla.Firefox&quot; -Name &quot;Firefox&quot; -Type &quot;msi&quot; -Class &quot;Applications&quot;</span><br><span class="line">Get-WinGetPackageURL -ID &quot;Mozilla.Thunderbird&quot; -Name &quot;Thunderbird&quot; -Type &quot;exe&quot; -Class &quot;Applications&quot;</span><br><span class="line">Get-WinGetPackageURL -ID &quot;Musescore.Musescore&quot; -Name &quot;Musescore&quot; -Type &quot;msi&quot; -Class &quot;Applications&quot;</span><br><span class="line">Get-WinGetPackageURL -ID &quot;OBSProject.OBSStudio&quot; -Name &quot;OBSStudio&quot; -Type &quot;exe&quot; -Class &quot;Applications&quot;</span><br><span class="line">Get-WinGetPackageURL -ID &quot;Pinta.Pinta&quot; -Name &quot;Pinta&quot; -Type &quot;exe&quot; -Class &quot;Applications&quot;</span><br><span class="line">Get-WinGetPackageURL -ID &quot;Piriform.Recuva&quot; -Name &quot;Recuva&quot; -Type &quot;exe&quot; -Class &quot;Applications&quot;</span><br><span class="line">Get-WinGetPackageURL -ID &quot;RealVNC.VNCViewer&quot; -Name &quot;VNCViewer&quot; -Type &quot;exe&quot; -Class &quot;Applications&quot;</span><br><span class="line">Get-WinGetPackageURL -ID &quot;Rufus.Rufus&quot; -Name &quot;Rufus&quot; -Type &quot;exe&quot; -Class &quot;Applications&quot;</span><br><span class="line">Get-WinGetPackageURL -ID &quot;ShiningLight.OpenSSL&quot; -Name &quot;OpenSSL&quot; -Type &quot;exe&quot; -Class &quot;Applications&quot;</span><br><span class="line">Get-WinGetPackageURL -ID &quot;SSHFS-Win.SSHFS-Win&quot; -Name &quot;SSHFS&quot; -Type &quot;msi&quot; -Class &quot;Applications&quot;</span><br><span class="line">Get-WinGetPackageURL -ID &quot;Tencent.QQ&quot; -Name &quot;Tencent_QQ&quot; -Type &quot;exe&quot; -Class &quot;Applications&quot;</span><br><span class="line">Get-WinGetPackageURL -ID &quot;Tencent.TencentMeeting&quot; -Name &quot;Tencent_Meeting&quot; -Type &quot;exe&quot; -Class &quot;Applications&quot;</span><br><span class="line">Get-WinGetPackageURL -ID &quot;Tencent.WeChat&quot; -Name &quot;Tencent_WeChat&quot; -Type &quot;exe&quot; -Class &quot;Applications&quot;</span><br><span class="line">Get-WinGetPackageURL -ID &quot;TheDocumentFoundation.LibreOffice&quot; -Name &quot;LibreOffice&quot; -Type &quot;msi&quot; -Class &quot;Applications&quot;</span><br><span class="line">Get-WinGetPackageURL -ID &quot;TortoiseGit.TortoiseGit&quot; -Name &quot;TortoiseGit&quot; -Type &quot;msi&quot; -Class &quot;Applications&quot;</span><br><span class="line">Get-WinGetPackageURL -ID &quot;TortoiseHg.TortoiseHg&quot; -Name &quot;TortoiseHg&quot; -Type &quot;msi&quot; -Class &quot;Applications&quot;</span><br><span class="line">Get-WinGetPackageURL -ID &quot;TortoiseSVN.TortoiseSVN&quot; -Name &quot;TortoiseSVN&quot; -Type &quot;msi&quot; -Class &quot;Applications&quot;</span><br><span class="line">Get-WinGetPackageURL -ID &quot;uGetdm.uGet&quot; -Name &quot;uGet&quot; -Type &quot;exe&quot; -Class &quot;Applications&quot;</span><br><span class="line">Get-WinGetPackageURL -ID &quot;VideoLAN.VLC&quot; -Name &quot;VideoLAN_VLC&quot; -Type &quot;msi&quot; -Class &quot;Applications&quot;</span><br><span class="line">Get-WinGetPackageURL -ID &quot;vim.vim&quot; -Name &quot;GVIM&quot; -Type &quot;exe&quot; -Class &quot;Applications&quot;</span><br><span class="line">Get-WinGetPackageURL -ID &quot;voidtools.Everything&quot; -Name &quot;Everything&quot; -Type &quot;exe&quot; -Class &quot;Applications&quot;</span><br><span class="line">Get-WinGetPackageURL -ID &quot;WinFsp.WinFsp&quot; -Name &quot;WinFsp&quot; -Type &quot;msi&quot; -Class &quot;Applications&quot;</span><br><span class="line">Get-WinGetPackageURL -ID &quot;WiresharkFoundation.Wireshark&quot; -Name &quot;Wireshark&quot; -Type &quot;exe&quot; -Class &quot;Applications&quot;</span><br><span class="line">Get-WinGetPackageURL -ID &quot;XnSoft.XnConvert&quot; -Name &quot;XnConvert&quot; -Type &quot;exe&quot; -Class &quot;Applications&quot;</span><br><span class="line">Get-WinGetPackageURL -ID &quot;ZeroTier.ZeroTierOne&quot; -Name &quot;ZeroTier_One&quot; -Type &quot;msi&quot; -Class &quot;Applications&quot;</span><br><span class="line"></span><br><span class="line"># 软件包计数：用于对照日志查缺补漏</span><br><span class="line">Write-Output &quot;Total: $Script:PackageCount`n&quot; | Tee-Object $Script:PackageList -Append</span><br><span class="line">Write-Output &quot;Write-Output `&quot;Total: `$Script:PackageLocalCount``n`&quot;&quot; | Out-File $Script:PackageScriptIWR -Append</span><br><span class="line">Write-Output &quot;Write-Output `&quot;Total: `$Script:PackageLocalCount``n`&quot;&quot; | Out-File $Script:PackageScriptSBT -Append</span><br><span class="line">Write-Output &quot;Write-Output `&quot;Total: `$Script:PackageLocalCount``n`&quot;&quot; | Out-File $Script:PackageScriptWCD -Append</span><br><span class="line"></span><br><span class="line"># 查看日志文件</span><br><span class="line">explorer &quot;$&#123;env:LOCALAPPDATA&#125;\Packages\Microsoft.DesktopAppInstaller_8wekyb3d8bbwe\LocalState\DiagOutputDir&quot;</span><br><span class="line">Remove-Item &quot;$&#123;env:LOCALAPPDATA&#125;\Packages\Microsoft.DesktopAppInstaller_8wekyb3d8bbwe\LocalState\DiagOutputDir\*&quot; -Recurse -Force -Confirm</span><br></pre></td></tr></table></figure>
<p>这段代码的作用是将指定好的软件包的信息从 WinGet 上爬取下来，并自动生成用于下载这些软件包的脚本。将此段代码复制另存为 Get-PackagesInfo.ps1 ，在 PowerShell 中跳转到脚本所在目录运行脚本，若遇到了权限问题，请用管理员权限打开 PowerShell 环境，并正确指定本地计算机的 PowerShell 执行策略<br>完成上述步骤，就可以在 PowerShell 环境下执行这个脚本了：<br><code>.\Get-PackagesInfo.ps1</code><br>执行后，脚本会自动从 WinGet 配置的源下载安装包的信息，稍等片刻</p>
<p>运行完毕后，在当前目录会自动生成 3 个新的 PS 脚本，用于将 Get-PackagesInfo.ps1 这个脚本中指定的软件包按分类从 WinGet 源下载到 PackageInstallers 目录下的分类目录中<br><img src="https://cloud.yuchu.me/f/w0ty/winget_ps.png" alt="winget_ps"><br>这三个脚本的功能完全一致，只是用于下载采用的实现不同：</p>
<p>“Get-PackageInstallersIWR.ps1” 使用 cmdlet Invoke-WebRequest 下载</p>
<p>“Get-PackageInstallersSBT.ps1” 使用 cmdlet Start-BitsTransfer 下载</p>
<p>“Get-PackageInstallersWCD.ps1” 创建 System.Net.WebClient 对象下载<br>任选其一即可</p>
<h1 id="END"><a href="#END" class="headerlink" title="END"></a>END</h1>]]></content>
      <categories>
        <category>blog</category>
      </categories>
      <tags>
        <tag>winget</tag>
        <tag>windows实用工具</tag>
      </tags>
  </entry>
  <entry>
    <title>极简markdown语法</title>
    <url>/posts/f33f/</url>
    <content><![CDATA[<h1 id="极简markdown语法"><a href="#极简markdown语法" class="headerlink" title="极简markdown语法"></a>极简markdown语法</h1><h2 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h2><p>要创建标题，请在单词或短语前面添加井号 (#) 。# 的数量代表了标题的级别。例如，添加三个 # 表示创建一个三级标题 (&lt;\h3&gt;) (例如：### My Header)</p>
<h3 id="可选"><a href="#可选" class="headerlink" title="可选"></a>可选</h3><p>还可以在文本下方添加任意数量的 &#x3D;&#x3D; 号来标识一级标题，或者 – 号来标识二级标题。</p>
<h2 id="段落"><a href="#段落" class="headerlink" title="段落"></a>段落</h2><p>要创建段落，请使用空白行将一行或多行文本进行分隔。</p>
<span id="more"></span>

<h2 id="换行"><a href="#换行" class="headerlink" title="换行"></a>换行</h2><p>在一行的末尾添加两个或多个空格，然后按回车键,即可创建一个换行(或使用HTML语法的<br>)。</p>
<h2 id="强调"><a href="#强调" class="headerlink" title="强调"></a>强调</h2><h3 id="粗体"><a href="#粗体" class="headerlink" title="粗体"></a>粗体</h3><p>要加粗文本，请在单词或短语的前后各添加两个星号（**内容**）或下划线（__内容__）。如需加粗一个单词或短语的中间部分用以表示强调的话，请在要加粗部分的两侧各添加两个星号（这**是内**容）。</p>
<h3 id="斜体"><a href="#斜体" class="headerlink" title="斜体"></a>斜体</h3><p>要用斜体显示文本，请在单词或短语前后添加一个星号（*内容*）或下划线（_内容_）。要斜体突出单词的中间部分，请在字母前后各添加一个星号，中间不要带空格。</p>
<h3 id="粗体-斜体"><a href="#粗体-斜体" class="headerlink" title="粗体&amp;斜体"></a>粗体&amp;斜体</h3><p>要同时用粗体和斜体突出显示文本，请在单词或短语的前后各添加三个星号或下划线。要加粗并用斜体显示单词或短语的中间部分，请在要突出显示的部分前后各添加三个星号，中间不要带空格。</p>
<h2 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h2><p>要创建块引用，请在段落前添加一个 &gt; 符号</p>
<h3 id="多个段落的块引用"><a href="#多个段落的块引用" class="headerlink" title="多个段落的块引用"></a>多个段落的块引用</h3><p>块引用可以包含多个段落。为段落之间的空白行添加一个 &gt; 符号。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&gt; 第一段</span><br><span class="line">&gt;</span><br><span class="line">&gt; 第二段</span><br></pre></td></tr></table></figure>

<h3 id="嵌套块引用"><a href="#嵌套块引用" class="headerlink" title="嵌套块引用"></a>嵌套块引用</h3><p>块引用可以嵌套。在要嵌套的段落前添加一个 &gt;&gt; 符号</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&gt; 一层引用</span><br><span class="line">&gt;</span><br><span class="line">&gt;&gt; 二层引用</span><br></pre></td></tr></table></figure>
<h2 id="带有其它元素的块引用"><a href="#带有其它元素的块引用" class="headerlink" title="带有其它元素的块引用"></a>带有其它元素的块引用</h2><p>块引用可以包含其他 Markdown 格式的元素。并非所有元素都可以使用，你需要进行实验以查看哪些元素有效。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&gt; #### The quarterly results look great!</span><br><span class="line">&gt;</span><br><span class="line">&gt; - Revenue was off the chart.</span><br><span class="line">&gt; - Profits were higher than ever.</span><br><span class="line">&gt;</span><br><span class="line">&gt;  *Everything* is going according to **plan**.</span><br></pre></td></tr></table></figure>
<h2 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h2><p>有序列表<br>要创建有序列表，请在每个列表项前添加数字并紧跟一个英文句点。数字不必按数学顺序排列，但是列表应当以数字 1 起始。</p>
<h3 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a>无序列表</h3><p>无序列表<br>要创建无序列表，请在每个列表项前面添加破折号 (-)、星号 (*) 或加号 (+) 。缩进一个或多个列表项可创建嵌套列表</p>
<h3 id="在列表中嵌套其他元素"><a href="#在列表中嵌套其他元素" class="headerlink" title="在列表中嵌套其他元素"></a>在列表中嵌套其他元素</h3><p>要在保留列表连续性的同时在列表中添加另一种元素，请将该元素缩进四个空格或一个制表符。</p>
<h2 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h2><p>要添加表，请使用三个或多个连字符（—）创建每列的标题，并使用管道（|）分隔每列。您可以选择在表的任一端添加管道。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">| Syntax      | Description |</span><br><span class="line">| ----------- | ----------- |</span><br><span class="line">| Header      | Title       |</span><br><span class="line">| Paragraph   | Text        |</span><br></pre></td></tr></table></figure>
<h3 id="对齐"><a href="#对齐" class="headerlink" title="对齐"></a>对齐</h3><p>您可以通过在标题行中的连字符的左侧，右侧或两侧添加冒号（:），将列中的文本对齐到左侧，右侧或中心</p>
<h2 id="分隔线语法"><a href="#分隔线语法" class="headerlink" title="分隔线语法"></a>分隔线语法</h2><p>要创建分隔线，请在单独一行上使用三个或多个星号 (***)、破折号 (—) 或下划线 (___) ，并且不能包含其他内容。</p>
<h2 id="链接语法"><a href="#链接语法" class="headerlink" title="链接语法"></a>链接语法</h2><p>链接文本放在中括号内，链接地址放在后面的括号中，链接title可选。</p>
<p>超链接Markdown语法代码：<code>[超链接显示名](超链接地址 &quot;超链接title&quot;)</code></p>
<p>对应的HTML代码：<code>&lt;a href=&quot;超链接地址&quot; title=&quot;超链接title&quot;&gt;超链接显示名&lt;/a&gt;</code></p>
<p>  这是一个链接 <code>[Markdown语法](https://markdown.com.cn)</code>。</p>
<h3 id="给链接增加-Title"><a href="#给链接增加-Title" class="headerlink" title="给链接增加 Title"></a>给链接增加 Title</h3><p>链接title是当鼠标悬停在链接上时会出现的文字，这个title是可选的，它放在圆括号中链接地址后面，跟链接地址之间以空格分隔。</p>
<p>  这是一个链接 <code>[Markdown语法](https://markdown.com.cn &quot;最好的markdown教程&quot;)</code></p>
<h3 id="网址和Email地址"><a href="#网址和Email地址" class="headerlink" title="网址和Email地址"></a>网址和Email地址</h3><p>使用尖括号可以很方便地把URL或者email地址变成可点击的链接。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;https://markdown.com.cn&gt;</span><br><span class="line">&lt;fake@example.com&gt;</span><br></pre></td></tr></table></figure>

<h3 id="引用类型链接"><a href="#引用类型链接" class="headerlink" title="引用类型链接"></a>引用类型链接</h3><p>引用样式链接是一种特殊的链接，它使URL在Markdown中更易于显示和阅读。参考样式链接分为两部分：与文本保持内联的部分以及存储在文件中其他位置的部分，以使文本易于阅读。</p>
<h4 id="链接的第一部分格式"><a href="#链接的第一部分格式" class="headerlink" title="链接的第一部分格式"></a>链接的第一部分格式</h4><p>引用类型的链接的第一部分使用两组括号进行格式设置。第一组方括号包围应显示为链接的文本。第二组括号显示了一个标签，该标签用于指向您存储在文档其他位置的链接。</p>
<p>尽管不是必需的，可以在第一组和第二组括号之间包含一个空格。第二组括号中的标签不区分大小写，可以包含字母，数字，空格或标点符号。</p>
<p>以下示例格式对于链接的第一部分效果相同：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[hobbit-hole][1]</span><br><span class="line">[hobbit-hole] [1]</span><br></pre></td></tr></table></figure>
<h4 id="链接的第二部分格式"><a href="#链接的第二部分格式" class="headerlink" title="链接的第二部分格式"></a>链接的第二部分格式</h4><p>引用类型链接的第二部分使用以下属性设置格式：</p>
<p>放在括号中的标签，其后紧跟一个冒号和至少一个空格（例如[label]:）。<br>链接的URL，可以选择将其括在尖括号中。<br>链接的可选标题，可以将其括在双引号，单引号或括号中。<br>以下示例格式对于链接的第二部分效果相同：</p>
<p>可以将链接的第二部分放在Markdown文档中的任何位置。有些人将它们放在出现的段落之后，有些人则将它们放在文档的末尾（例如尾注或脚注）。</p>
<h2 id="图片语法"><a href="#图片语法" class="headerlink" title="图片语法"></a>图片语法</h2><p>要添加图像，请使用感叹号 (!), 然后在方括号增加替代文本，图片链接放在圆括号里，括号里的链接后可以增加一个可选的图片标题文本。</p>
<p>插入图片Markdown语法代码：<code>![图片alt](图片链接 &quot;图片title&quot;)</code>。</p>
<p>对应的HTML代码：<code>&lt;img src=&quot;图片链接&quot; alt=&quot;图片alt&quot; title=&quot;图片title&quot;&gt;</code></p>
<h3 id="链接图片"><a href="#链接图片" class="headerlink" title="链接图片"></a>链接图片</h3><p>给图片增加链接，请将图像的Markdown 括在方括号中，然后将链接添加在圆括号中。</p>
<h2 id="转义字符语法"><a href="#转义字符语法" class="headerlink" title="转义字符语法"></a>转义字符语法</h2><p>要显示原本用于格式化 Markdown 文档的字符，请在字符前面添加反斜杠字符 \ 。</p>
]]></content>
      <categories>
        <category>blog</category>
      </categories>
      <tags>
        <tag>markdown</tag>
      </tags>
  </entry>
  <entry>
    <title>基于hexo和GitHub page搭建个人博客</title>
    <url>/posts/4883/</url>
    <content><![CDATA[<h3 id="成品展示"><a href="#成品展示" class="headerlink" title="成品展示"></a>成品展示</h3><p><img src="https://cloud.yuchu.me/f/x2ux/my_blog.png" alt="成品展示"></p>
<h2 id="使用工具："><a href="#使用工具：" class="headerlink" title="使用工具："></a>使用工具：</h2><ul>
<li>git</li>
<li>github</li>
<li>hexo</li>
<li>vscode( 任意具备markdown编辑能力的工具均可)</li>
</ul>
<h2 id="git安装"><a href="#git安装" class="headerlink" title="git安装"></a>git安装</h2><p><a href="https://git-scm.com/download/win">git官网下载</a><br>选择电脑对应版本安装即可（一般为64位）</p>
<span id="more"></span>

<h2 id="node、npm安装"><a href="#node、npm安装" class="headerlink" title="node、npm安装"></a>node、npm安装</h2><p><a href="https://nodejs.org/en/download/">node.js官网</a></p>
<h1 id="hexo创建个人博客"><a href="#hexo创建个人博客" class="headerlink" title="hexo创建个人博客"></a>hexo创建个人博客</h1><h2 id="安装hexo"><a href="#安装hexo" class="headerlink" title="安装hexo"></a>安装hexo</h2><h3 id="1-在任意目录下新建hexo文件夹"><a href="#1-在任意目录下新建hexo文件夹" class="headerlink" title="1.在任意目录下新建hexo文件夹"></a>1.在任意目录下新建hexo文件夹</h3><ul>
<li>打开该文件夹，空白处单击鼠标右键:Git Bash Here</li>
<li>在打开的git bash 窗口中依次输入以下命令：  <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install hexo-cli -g</span><br><span class="line">hexo init blog</span><br><span class="line">cd blog</span><br><span class="line">npm install</span><br><span class="line">hexo server</span><br></pre></td></tr></table></figure>
全部执行完成后，hexo目录下会出现一个新的blog文件夹，里面就是存放博客的地方</li>
<li>然后输入这两条命令 <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo g</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure>
完成后若显示诸如<code>http://localhost:4000</code>的内容，则说明配置成功。<br>打开浏览器，地址栏输入上面的地址，即可进入初始博客的预览界面，它长这样：</li>
</ul>
<p><img src="https://cloud.yuchu.me/f/yXCL/hexo_test.png"></p>
<p>为什么说是预览界面呢，因为她现在仅仅只是部署在你电脑本地的一个离线版本，只能在你自己的电脑上看见，想要正式发布公开，你需要一台拥有公网IP的服务器，但还有一个更简单的方法，即借助GitHub page的ssh功能实现对外访问。</p>
<h2 id="GitHub创建仓库"><a href="#GitHub创建仓库" class="headerlink" title="GitHub创建仓库"></a>GitHub创建仓库</h2><ul>
<li>首先创建一个GitHub账号，然后在个人主页新建仓库，仓库名为username.github.io,username即你的用户名。</li>
<li>回到gitbash窗口，按<code>Ctrl+C</code> 关闭4000端口的预览，输入以下命令：  <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git config --global user.name &quot;yourname&quot;    # yourname改为GitHub用户名</span><br><span class="line">git config --global user.email &quot;youremail&quot;  #youremail改为注册GitHub所用的邮箱</span><br><span class="line">ssh-keygen -t rsa -C &quot;youremail&quot;            #创建ssh连接</span><br></pre></td></tr></table></figure></li>
<li>之后会提示你已经完成ssh创建，接着找到该路径下的这两个文件：</li>
</ul>
<p>  <img src="https://cloud.yuchu.me/f/znF4/git_config.png"></p>
<p>  把id_rsa.pub里的内容复制下来，打开GitHub的设置界面（点击头像-setting），找到SSH and GPG keys,x新建一个ssh key，粘贴进key中，title随便填一个就行，保存。</p>
<p>  <img src="https://cloud.yuchu.me/f/AQHE/github_ssh.png"></p>
<h2 id="hexo部署到GitHub"><a href="#hexo部署到GitHub" class="headerlink" title="hexo部署到GitHub"></a>hexo部署到GitHub</h2><ul>
<li><p>在blog文件夹下找到_config.yml,这是博客的配置文件,在这里可以修改博客的一些基本信息，打开它，找到下面这段内容,在最底下：</p>
  <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># Deployment</span><br><span class="line">## Docs: https://hexo.io/docs/one-command-deployment</span><br><span class="line">deploy:</span><br><span class="line">  type: &#x27;&#x27;</span><br></pre></td></tr></table></figure>
<p>  修改deploy部分：</p>
  <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: https://github.com/username/username.github.io.git   #username改为用户名</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure></li>
<li><p>另外找到第十六行，修改url为 <code>https://username.github.io</code></p>
</li>
<li><p>完成后保存文件并退出，在gitbash中输入：<code>npm install hexo-deployer-git --save</code>,安装git部署工具。</p>
</li>
<li><p>最后输入以下三行命令：</p>
  <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo clean           #清除缓存</span><br><span class="line">hexo g               #生产静态文章（博客）</span><br><span class="line">hexo d               #部署</span><br></pre></td></tr></table></figure></li>
<li><p>当然，如果仅是在本地查看效果，第三行命令也可以换成hexo s<br>  部署过程中可能会出现warning警告，但不要紧，只要最后呈现这样的内容，就表示成功了：<br>  <img src="https://cloud.yuchu.me/f/B1I8/hexo-d.png"><br>  之后，你就可以 <code>username.github.io</code>访问到你的博客了，且可以被任何人访问到。</p>
</li>
</ul>
<h2 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h2><p>在根目录打开gitbash：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo new &quot;博客名称&quot;  #新建博客</span><br><span class="line">hexo clean          #清除缓存和静态文件</span><br><span class="line">hexo g              #生产静态文件</span><br><span class="line">hexo s              #生成离线版本</span><br><span class="line">hexo d              #部署</span><br></pre></td></tr></table></figure>

<h2 id="添加插件"><a href="#添加插件" class="headerlink" title="添加插件"></a>添加插件</h2><h3 id="主题"><a href="#主题" class="headerlink" title="主题"></a>主题</h3><p>我使用的是next，一款简洁美观的主题，功能强大，可拓展性强，在gitbash中下载：<br><code>git clone https://github.com/next-theme/hexo-theme-next themes/next</code><br>下载完成后，在blog下找到themes文件夹-next,打开主题的_config.yml文件，找到如下部分，大概在100行左右：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># Schemes</span><br><span class="line">#scheme: Muse</span><br><span class="line">#scheme: Mist</span><br><span class="line">#scheme: Pisces</span><br><span class="line">#scheme: Gemini</span><br></pre></td></tr></table></figure>
<p>这代表了四种不同风格的next主题，任选一个取消注释即可。<br>之后回到根目录的_config.yml文件，找到theme选项，输入next<br><img src="https://cloud.yuchu.me/f/DJS3/hexo_theme.png"></p>
<h2 id="博客基本信息"><a href="#博客基本信息" class="headerlink" title="博客基本信息"></a>博客基本信息</h2><p>在blog下找到_config.yml并打开，配置站点信息<br><img src="https://cloud.yuchu.me/f/EGTp/hexo_site.png"><br>注意，语言要改成中文：zh-CN,其他的可以按个人喜好更改。</p>
<h1 id="END"><a href="#END" class="headerlink" title="END"></a>END</h1>]]></content>
      <categories>
        <category>blog</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>github page</tag>
        <tag>个人博客</tag>
      </tags>
  </entry>
</search>
